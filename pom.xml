<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.drrb</groupId>
    <artifactId>rust-netbeans</artifactId>
    <version>1.0.3-SNAPSHOT</version>
    <packaging>nbm</packaging>

    <name>Rust NetBeans Plugin</name>
    <description>NetBeans plugin to support the Rust language</description>

    <licenses>
        <license>
            <name>GNU General Public License, Version 3</name>
            <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>manual</distribution>
            <comments>A free, copyleft license for software and other kinds of works</comments>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <netbeans.version>RELEASE82</netbeans.version>
        <netbeans.run.params.ide/>
        <netbeans.run.params>${netbeans.run.params.ide} -J-Dnetbeans.full.hack=true</netbeans.run.params>
    </properties>

    <repositories>
        <!--
        Repository hosting NetBeans modules, especially APIs.
        Versions are based on IDE releases, e.g.: RELEASE691
        To create your own repository, use: nbm:populate-repository
        -->
        <repository>
            <id>netbeans</id>
            <name>NetBeans</name>
            <url>http://bits.netbeans.org/nexus/content/groups/netbeans</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <!--
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-api-annotations-common</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        -->

        <!-- Common Scripting Language API (new) -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-csl-api</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-csl-types</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Datasystems API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-loaders</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Dialogs API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-dialogs</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- File System API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-filesystems</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Lexer API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-lexer</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Lookup API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-util-lookup</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Nodes API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-nodes</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Text API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-text</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- UI Utilities API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-awt</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Utilities API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-util</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Window System API -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-windows</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-editor-codetemplates</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-editor-errorstripe</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-spi-editor-hints</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-parsing-api</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-parsing-indexing</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-util-ui</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Parsing -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.7.1</version>
        </dependency>

        <!-- For Indenting Task -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-editor-indent</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Code completion -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-editor-completion</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-editor-mimelookup</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Braces Matching -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-editor-bracesmatching</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-editor-lib</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Typing Hooks -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-editor-lib2</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- Commenting -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-editor-util</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- For Code Folding -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-editor-fold</artifactId>
            <version>${netbeans.version}</version>
        </dependency>

        <!-- Project Type -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-projectuiapi</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-projectuiapi-base</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-projectapi</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-project-ant</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <!-- TODO: causes "friend" error. Not sure if we actually need it though -->
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-projectui</artifactId>
            <version>${netbeans.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-java-project</artifactId>
            <version>${netbeans.version}</version>
        </dependency>

        <!-- Classpath -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-api-java-classpath</artifactId>
            <version>${netbeans.version}</version>
        </dependency>

        <!-- Cargo -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-execution</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-io</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-api-progress</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-gsf-testrunner</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-gsf-testrunner-ui</artifactId>
            <version>${netbeans.version}</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-api-progress-nb</artifactId>
            <version>${netbeans.version}</version>
        </dependency>

        <!-- Options Panel -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-options-api</artifactId>
            <version>${netbeans.version}</version>
        </dependency>

        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-core-multiview</artifactId>
            <version>${netbeans.version}</version>
        </dependency>

        <!-- Non-NetBeans Dependencies -->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>4.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.pegdown</groupId>
            <artifactId>pegdown</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.moandjiezana.toml</groupId>
            <artifactId>toml4j</artifactId>
            <version>0.7.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>14.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>3.0</version>
        </dependency>
        <!-- Configures the module system at runtime to treat this module
             as a friend module of gsf's testing infrastructure.  See
             Installer.
        -->
        <dependency>
            <groupId>org.netbeans.contrib.yenta</groupId>
            <artifactId>api</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- Test Dependencies -->
        <!-- Project API Implementation -->
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-projectapi-nb</artifactId>
            <version>${netbeans.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Parsing API IDE Bridge -->
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-parsing-nb</artifactId>
            <version>${netbeans.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Projects SPI (Internal) -->
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-project-spi-intern</artifactId>
            <version>${netbeans.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Projects SPI Impl (Internal) -->
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-project-spi-intern-impl</artifactId>
            <version>${netbeans.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Projects Indexing Bridge-->
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-project-indexingbridge</artifactId>
            <version>${netbeans.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version> <!-- JUnit 4.10 needs 1.1 -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version> <!-- NbJunit needs 4.10 -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>1.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>1.5.1</version>
            <scope>test</scope>
        </dependency>

        <!-- Functional test dependencies -->
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-nbjunit</artifactId>
            <version>${netbeans.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-jellytools-platform</artifactId>
            <version>${netbeans.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-netbeans-modules-jellytools-ide</artifactId>
            <version>${netbeans.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.netbeans.modules</groupId>
            <artifactId>org-netbeans-modules-masterfs</artifactId>
            <version>${netbeans.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>package</defaultGoal>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>nbm-maven-plugin</artifactId>
                    <version>4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.18.1</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>nbm-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <codeNameBase>drrb.rust</codeNameBase>
                    <verifyRuntime>warn</verifyRuntime>
                    <licenseName>GPL3</licenseName>
                    <licenseFile>LICENSE.txt</licenseFile>
                    <moduleDependencies>
                        <dependency>
                            <id>org.netbeans.modules:org-netbeans-modules-gsf-testrunner</id>
                            <explicitValue>org.netbeans.modules.gsf.testrunner/2 &gt; 1.0</explicitValue>
                        </dependency>
                        <dependency>
                            <id>org.netbeans.modules:org-netbeans-modules-gsf-testrunner-ui</id>
                            <explicitValue>org.netbeans.modules.gsf.testrunner.ui &gt; 1.0</explicitValue>
                        </dependency>
                        <dependency>
                            <id>org.netbeans.modules:org-netbeans-modules-projectui</id>
                            <type>loose</type>
                        </dependency>
                    </moduleDependencies>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <!-- to have the jar plugin pickup the nbm generated manifest -->
                    <useDefaultManifestFile>true</useDefaultManifestFile>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>copy-antlr-grammar</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target name="copy-antlr-sources">
                                
                                <!-- Use symlinks for ease of development/modification - leaving copy code
                                     below as it is more portable long-term (on Windows)
                                -->
                                <mkdir dir="${project.build.directory}/generated-sources/antlr-copied/com/github/drrb/rust/antlr/"/>
                                <mkdir dir="${project.build.directory}/generated-sources/antlr-copied/imports"/>
                                <symlink
                                    link="${project.build.directory}/generated-sources/antlr-copied/com/github/drrb/rust/antlr/Rust.g4"
                                    resource="${project.build.directory}/../externals/rust-grammar/Rust.g4"
                                    overwrite="true"
                                />
                                
                                <symlink
                                    link="${project.build.directory}/generated-sources/antlr-copied/imports/rust_tokens.g4"
                                    resource="${project.build.directory}/../externals/rust-grammar/rust_tokens.g4"
                                    overwrite="true"
                                />
                                
                                <symlink
                                    link="${project.build.directory}/generated-sources/antlr-copied/imports/xidcontinue.g4"
                                    resource="${project.build.directory}/../externals/rust-grammar/xidcontinue.g4"
                                    overwrite="true"
                                />
                                
                                <symlink
                                    link="${project.build.directory}/generated-sources/antlr-copied/imports/xidstart.g4"
                                    resource="${project.build.directory}/../externals/rust-grammar/xidstart.g4"
                                    overwrite="true"
                                />
                                
                                
                                <!-- Copy the rust grammar to the dest folder -->
<!--                                <copy todir="${project.build.directory}/generated-sources/antlr-copied/com/github/drrb/rust/antlr"
                                      preservelastmodified="true">
                                    <fileset dir="${project.build.directory}/../externals/rust-grammar/">
                                        <include name="Rust.g4"/>
                                    </fileset>
                                </copy>-->
                                
                                <!-- Copy our additional tokens file, which redefines inline strings
                                from the imported grammar to have meaningful names, so we get
                                usable, stable constant names on our lexer and parser which map
                                to token types -->
                                
<!--                                <copy todir="${project.build.directory}/generated-sources/antlr-copied/imports" preservelastmodified="true">
                                    <fileset dir="${project.basedir}/src/main/antlr/imports/">
                                        <include name="rust_tokens.g4"/>
                                    </fileset>
                                </copy>-->

                                <!-- Copy the supplemental fragment definitions from the antlr grammar project
                                so they can be found when generating the grammar-->
<!--                                <copy todir="${project.build.directory}/generated-sources/antlr-copied/imports" preservelastmodified="true">
                                    <fileset dir="${project.build.directory}/../externals/rust-grammar/">
                                        <include name="x*.g4"/>
                                        <include name="rust_tokens.g4"/>
                                    </fileset>
                                </copy>-->
                                <!-- End of Antlr fiddling -->
                                
                                <!-- Sigh - it appears in antrun 1.8, you cannot attach to two different
                                     build phases in a single ant build.  So, while this ought to be attached
                                     to the generate-test-sources phase, but we do it here.  Cheap except the
                                     first time.
                                -->
                                <echo>Downloading Rust sources to ${basedir}/tmp/rust-sources.zip if not present</echo>
                                <mkdir dir="${basedir}/tmp"/>
                                <get src="https://api.github.com/repos/rust-lang/rust/zipball/release-0.7"
                                         dest="${basedir}/tmp/rust-sources.zip"
                                         skipexisting="true"
                                         verbose="true"/>
                                <copy todir="${basedir}/tmp/rust"
                                         outputencoding="UTF-8"
                                         verbose="true"
                                    >
                                    <zipfileset src="${basedir}/tmp/rust-sources.zip">
                                        <patternset>
                                            <include name="**/*.rs"/>
                                            <exclude name="**/*-fail/**"/>
                                        </patternset>
                                    </zipfileset>
                                    <flattenmapper/>
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.7.1</version>
                <configuration>
                    <sourceDirectory>${project.build.directory}/generated-sources/antlr-copied</sourceDirectory>
                    <!--<includes>com/github/drrb/rust/antlr/Rust.g4</includes>-->
                    <libDirectory>${project.build.directory}/generated-sources/antlr-copied/imports</libDirectory>
                    <!--<includes>**/*.g4</includes>-->
                    <visitor>true</visitor>
                </configuration>
                <executions>
                    <execution>
                        <id>antlr</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <visitor>true</visitor>
                            <listener>true</listener>
                            <options>
                                <language>Java</language>
                            </options>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- NetBeans 7.4+ requires JDK 7 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <useIncrementalCompilation>true</useIncrementalCompilation>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>

            <!-- Compile and use our build addon that compiles the Rust code -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>compile-build-addon</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/build/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compile Rust crates -->
            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <id>compile-rust-bridge</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.github.drrb.rust.netbeans.build.CompileRustCrates</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--
                        java.awt.headless=true: Stop tests hijacking UI on development machine
                        jna.nosys=true: Don't try to load JNA from the host system, use our dependency instead (needed for Appveyor, which has an old JNA on it)
                        noverify: Fix for JDK bug with PowerMock
                    -->
                    <argLine>-Djava.awt.headless=true -Djna.nosys=true -noverify</argLine>
                    <!-- Force Maven to run tests in-process -->
                    <!--<fork>never</fork>-->
                    <!-- Usefile disabled forces output to stdout / stderr in real time -
                         Useful for development; turn off for continuous builds.
                    -->
                    <useFile>false</useFile>
                    <forkCount>8</forkCount>
                    <reuseForks>false</reuseForks>
                    <!--<parallel>methods</parallel>-->
                    <!--<threadCount>1</threadCount>-->
                    <!--<threadCountMethods>1</threadCountMethods>-->
                    <!-- Ensure Maven doesn't hide the actually useful part of the stack
                         trace, which it frequently does in the case a test errors.
                    -->
                    <trimStackTrace>false</trimStackTrace>
                    <!-- Turn on logging for a bunch of stuff -->
                    <systemProperties>
                        <org.netbeans.modules.parsing.level>100</org.netbeans.modules.parsing.level>
                        <org.netbeans.modules.parsing.api.Snapshot>100</org.netbeans.modules.parsing.api.Snapshot>
                        <org.netbeans.modules.parsing.impl.RunWhenScanFinishedSupport.level>100</org.netbeans.modules.parsing.impl.RunWhenScanFinishedSupport.level>
                        <org.netbeans.modules.parsing.impl.TaskProcessor.level>100</org.netbeans.modules.parsing.impl.TaskProcessor.level>
                        <org.netbeans.modules.parsing.impl.indexing.RepositoryUpdater.level>100</org.netbeans.modules.parsing.impl.indexing.RepositoryUpdater.level>
                        <netbeans.logger.console>true</netbeans.logger.console>
                        <unit.test>true</unit.test>
                    </systemProperties>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Set up the functional test data -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>set-up-unit-test-data</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/test-data</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/test/data</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>functional-tests</id>
            <activation>
                <file>
                    <exists>.not-ci</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>nbm-maven-plugin</artifactId>
                        <executions>
                            <!-- Make the module available for the functional tests -->
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>cluster</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Run NbJunit functional tests with Failsafe -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.15</version>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>cluster.path.final</name>
                                    <value>
                                        ${project.build.directory}/netbeans_clusters/extra:${netbeans.installation}/ide:${netbeans.installation}/platform:${netbeans.installation}/java
                                    </value>
                                </property>
                            </systemProperties>
                            <includes>
                                <include>**/*IntegrationTest.java</include>
                            </includes>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Set up the functional test data -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>

                        <executions>
                            <execution>
                                <id>set-up-functional-test-data</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/data</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/test/qa-functional/data</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.mycila.maven-license-plugin</groupId>
                        <artifactId>maven-license-plugin</artifactId>
                        <version>1.9.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                                <phase>process-resources</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <header>license-header.txt</header>
                            <strictCheck>true</strictCheck>
                            <excludes>
                                <exclude>LICENSE.txt</exclude>
                                <exclude>**/*.rs</exclude>
                                <exclude>**/*.json</exclude>
                                <exclude>**/*.yml</exclude>
                                <exclude>**/*.yaml</exclude>
                                <exclude>**/*.jjt</exclude>
                                <exclude>**/*.toml</exclude>
                                <exclude>**/*.form</exclude>
                                <exclude>**/*.ps1</exclude>

                                <exclude>README.md</exclude>
                                <exclude>NOTICE</exclude>
                                <exclude>NOTICE.template</exclude>
                                <exclude>.gitignore</exclude>
                                <exclude>.headless</exclude>
                                <exclude>.not-ci</exclude>
                                <exclude>run</exclude>
                                <exclude>build</exclude>
                                <exclude>Makefile</exclude>
                                <exclude>src/scripts/generate-rust-token-kind-enum</exclude>

                                <exclude>.vagrant/**</exclude>
                                <exclude>Vagrantfile</exclude>
                                <exclude>cluster-path</exclude>
                                <exclude>.idea/**</exclude>

                                <exclude>src/main/nbm/manifest.mf</exclude>

                                <exclude>src/test/data/**</exclude>
                                <exclude>src/test/java/org/netbeans/api/editor/mimelookup/test/MockMimeLookup.java</exclude>
                                <exclude>src/test/java/org/netbeans/lib/lexer/test/dump/TokenDumpCheck.java</exclude>
                                <exclude>src/test/java/org/netbeans/lib/lexer/test/dump/TokenDumpLexer.java</exclude>
                                <exclude>src/test/java/org/netbeans/lib/lexer/test/dump/TokenDumpTokenId.java</exclude>
                                <exclude>src/test/java/org/netbeans/lib/lexer/test/LexerTestUtilities.java</exclude>
                                <exclude>src/test/java/org/netbeans/lib/lexer/test/TestLanguageProvider.java</exclude>
                                <exclude>src/test/java/org/netbeans/modules/csl/api/test/CslTestBase.java</exclude>
                                <exclude>src/test/java/org/netbeans/modules/csl/api/test/GsfUtilitiesHack.java</exclude>
                                <exclude>src/test/java/org/netbeans/modules/editor/bracesmatching/api/BracesMatchingTestUtils.java</exclude>
                                <exclude>src/test/java/org/netbeans/modules/parsing/impl/indexing/lucene/TestIndexFactoryImpl.java</exclude>
                                <exclude>src/test/java/org/openide/util/test/MockLookup.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.jasig.maven</groupId>
                        <artifactId>maven-notice-plugin</artifactId>
                        <version>1.0.4</version>
                        <configuration>
                            <licenseMapping>
                                <mapping>license-mappings.xml</mapping>
                            </licenseMapping>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <phase>process-resources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
